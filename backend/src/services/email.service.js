const nodemailer = require('nodemailer');

class EmailService {
    constructor() {
        // C·∫•u h√¨nh transporter cho email
        this.transporter = nodemailer.createTransport({
            service: 'gmail', // Ho·∫∑c service kh√°c t√πy theo nhu c·∫ßu
            auth: {
                user: process.env.EMAIL_USER || '',
                pass: process.env.EMAIL_PASSWORD || ''
            }
        });
    }

    async sendEmail({ to, subject, content }) {
        try {
            const mailOptions = {
                from: process.env.EMAIL_USER || 'your-email@gmail.com',
                to: to,
                subject: subject,
                html: `
                    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 5px;">
                            <h2 style="color: #333; margin-bottom: 20px;">${subject}</h2>
                            <div style="background-color: white; padding: 20px; border-radius: 5px; margin-bottom: 20px;">
                                ${content.replace(/\n/g, '<br>')}
                            </div>
                            <div style="text-align: center; color: #666; font-size: 12px;">
                                <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng qu·∫£n l√Ω l·ªõp h·ªçc</p>
                                <p>Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y</p>
                            </div>
                        </div>
                    </div>
                `
            };

            const result = await this.transporter.sendMail(mailOptions);
            console.log('Email sent successfully:', result.messageId);
            return result;
        } catch (error) {
            console.error('Error sending email:', error);
            throw new Error(`L·ªói g·ª≠i email: ${error.message}`);
        }
    }

    // Method ƒë·ªÉ g·ª≠i email th√¥ng b√°o t√†i kho·∫£n m·ªõi
    async sendAccountNotification({ to, username, password, fullName, role }) {
        const subject = 'IUH - Th√¥ng tin t√†i kho·∫£n v√† h∆∞·ªõng d·∫´n ƒëƒÉng nh·∫≠p h·ªá th·ªëng';
        const content = this.generateEmailTemplate({ to, username, password, fullName, role });
        return this.sendEmail({ to, subject, content });
    }

    // Method ƒë·ªÉ g·ª≠i email th·ªß c√¥ng t·ª´ admin
    async sendManualEmail({ to, subject, content, fullName, role, username, password }) {
        const emailContent = this.generateEmailTemplate({ 
            to, subject, content, fullName, role, username, password 
        });
        return this.sendEmail({ to, subject, content: emailContent });
    }

    // Template email chung cho t·∫•t c·∫£ tr∆∞·ªùng h·ª£p
    generateEmailTemplate({ to, subject, content, fullName, role, username, password }) {
        const roleText = role === 'teacher' ? 'Gi·∫£ng vi√™n' : 'Sinh vi√™n';
        const loginCode = role === 'teacher' ? 'M√£ gi·∫£ng vi√™n' : 'M√£ sinh vi√™n';
        
        return `
            <div style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; max-width: 600px; margin: 0 auto; background-color: #f8f9fa;">
                <!-- Header -->
                <div style="background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%); padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
                    <h1 style="color: white; margin: 0; font-size: 24px; font-weight: 600;">
                        ${subject || 'Th√¥ng tin t√†i kho·∫£n v√† h∆∞·ªõng d·∫´n ƒëƒÉng nh·∫≠p h·ªá th·ªëng'}
                    </h1>
                </div>
                
                <!-- Content -->
                <div style="background-color: white; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
                    <p style="color: #333; font-size: 16px; margin-bottom: 20px;">
                        <strong>Th√¢n g·ª≠i ${fullName},</strong>
                    </p>
                    
                    <div style="color: #555; font-size: 15px; line-height: 1.6; margin-bottom: 25px;">
                        ${content ? content.replace(/\n/g, '<br>') : 'T√†i kho·∫£n c·ªßa b·∫°n tr√™n h·ªá th·ªëng qu·∫£n l√Ω l·ªõp h·ªçc IUH v·ª´a ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng.'}
                    </div>
                    
                    ${username && password ? `
                    <div style="background-color: #e3f2fd; padding: 20px; border-radius: 8px; margin: 25px 0; border-left: 4px solid #2196f3;">
                        <h3 style="color: #1976d2; margin-top: 0; margin-bottom: 15px; font-size: 18px;">
                            üìã Th√¥ng tin t√†i kho·∫£n:
                        </h3>
                        <div style="background-color: white; padding: 15px; border-radius: 5px; margin: 10px 0;">
                            <p style="margin: 8px 0; color: #333;"><strong>${loginCode}:</strong> <span style="color: #1976d2; font-weight: 600;">${username}</span></p>
                            <p style="margin: 8px 0; color: #333;"><strong>M·∫≠t kh·∫©u:</strong> <span style="color: #d32f2f; font-weight: 600;">${password}</span></p>
                            <p style="margin: 8px 0; color: #333;"><strong>Ch·ª©c danh:</strong> <span style="color: #388e3c; font-weight: 600;">${roleText}</span></p>
                        </div>
                    </div>
                    ` : ''}
                    
                    <div style="background-color: #f3e5f5; padding: 20px; border-radius: 8px; margin: 25px 0; border-left: 4px solid #9c27b0;">
                        <h3 style="color: #7b1fa2; margin-top: 0; margin-bottom: 15px; font-size: 18px;">
                            üåê H∆∞·ªõng d·∫´n truy c·∫≠p h·ªá th·ªëng:
                        </h3>
                        <p style="color: #555; margin: 10px 0;">
                            ƒê·ªÉ s·∫µn s√†ng s·ª≠ d·ª•ng h·ªá th·ªëng, truy c·∫≠p t·∫°i:
                        </p>
                        <div style="background-color: white; padding: 15px; border-radius: 5px; margin: 10px 0; text-align: center;">
                            <a href="http://localhost:3000" style="color: #1976d2; text-decoration: none; font-weight: 600; font-size: 16px;">
                                üîó http://localhost:3000
                            </a>
                        </div>
                    </div>
                    
                    <div style="background-color: #fff3e0; padding: 20px; border-radius: 8px; margin: 25px 0; border-left: 4px solid #ff9800;">
                        <h3 style="color: #f57c00; margin-top: 0; margin-bottom: 15px; font-size: 18px;">
                            ‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:
                        </h3>
                        <ul style="color: #555; margin: 0; padding-left: 20px;">
                            <li style="margin: 8px 0;">Vui l√≤ng ƒëƒÉng nh·∫≠p v√† thay ƒë·ªïi m·∫≠t kh·∫©u ngay ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n</li>
                            <li style="margin: 8px 0;">Kh√¥ng chia s·∫ª th√¥ng tin ƒëƒÉng nh·∫≠p v·ªõi ng∆∞·ªùi kh√°c</li>
                            <li style="margin: 8px 0;">Li√™n h·ªá ph√≤ng C√¥ng T√°c Sinh Vi√™n n·∫øu g·∫∑p v·∫•n ƒë·ªÅ khi ƒëƒÉng nh·∫≠p</li>
                        </ul>
                    </div>
                    
                    <p style="color: #666; font-size: 14px; margin-top: 30px; text-align: center;">
                        Tr√¢n tr·ªçng,<br>
                        <strong>IUH - Tr∆∞·ªùng ƒê·∫°i h·ªçc C√¥ng nghi·ªáp TP.HCM</strong>
                    </p>
                </div>
                
                <!-- Footer -->
                <div style="text-align: center; padding: 20px; color: #666; font-size: 12px;">
                    <p>¬© 2024 IUH Classroom Management System. Powered by IUH IT Department.</p>
                </div>
            </div>
        `;
    }
}

module.exports = new EmailService();
